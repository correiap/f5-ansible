#!/usr/bin/python

DOCUMENTATION = '''
---
module: asm_hash
author: Pedro Correia (@correiap)
version_added: "1.0"
short_description: Get the ASM Hash associated with the ASM Policy name
description:
    - This module retrives the ASM Hash associated with the ASM Policy Name. It takes the Management IP or Hostname of the F5 BIG-IP Device,
      the Authentication Token and the name of the ASM Policy. Then it performs a loop to fetch the correct ASM Hash based on the Policy Name.
references:
      F5 iControl REST API User Guide Version 13.0
requirements:
    - none
options:
    host:
        description:
            - The IP address or hostname of the F5 appliance
        required: true
    token:
        description:
            - F5 Authentication Token
        required: true
    policy_name:
        description:
            - ASM Policy Name
        required: true
'''

EXAMPLES = '''
    - name: Get ASM Hash
      asm_hash:
        host: "{{ HOSTNAME }}"
        token: "{{ TOKEN }}"
        policy_name: "{{ ASM_POLICY_NAME }}"
	  register: asm_hash
	  
    - name: Assign ASM Hash to Variable 
      set_fact:
        ASM_HASH: "{{asm_hash.ASM_Hash}}"
'''


import sys
import time
import json
import requests



from ansible.module_utils.basic import *

def genURI (mgmtip, policy_name):

	URI = "https://" + mgmtip + "/mgmt/tm/asm/policies?$filter=name+eq+" + policy_name

	return (URI)

def getASMPolicyInfoInfo (URI, token):

	headers = {'content-type': "application/json", 'x-f5-auth-token': token}

	r = requests.get(URI, headers=headers, verify=False)
	
	content = r.json()

	return (content)
	
def asmHash (asmInfo):

    asm_hash = ""
    
    asm_hash =  asmInfo['items'][0]['id']
   
    return asm_hash


def main():
	#fields = {
	#	"mgmtip" : {"required": True, "type": str},
	#	"token" : {"required": True, "type": str},
	#	"policy_name" : {"required": True, "type": str}
	#}

	#module = AnsibleModule(argument_spec=fields)

	module_args = AnsibleModule(
        	argument_spec = dict(
            		mgmtip = dict(required=True),
            		token = dict(required=True),
            		policy_name  = dict(required=True, no_log=True)
         	),
        	check_invalid_arguments=False,
        	add_file_common_args=True
	)
    
    	result = dict(
        	changed=False,
        	original_message='',
        	message=''
    	)



    #function to generate URI
	URI = genURI (module_args.params["mgmtip"], module_args.params["policy_name"])
	
	#function to make GET request
	asmInfo = getASMPolicyInfoInfo (URI, module_args.params["token"])

	#function to extract asm_hash information
	asm_hash = asmHash (asmInfo)

	module_args.exit_json(changed=False, ASM_Hash=asm_hash)

if __name__ == '__main__':
    main()
