---

- name: Create LTM and ASM configuration
  hosts: bigip1.local
  gather_facts: no
  vars_prompt:
    - name: "USER"
      prompt: "Enter F5 Username"
      private: no
    - name: "PASSWORD"
      prompt: "Enter F5 Password"
      private: yes
    - name: "APP_FILE"
      prompt: "Enter APP Info File Name"
      private: no
    - name: "CERTIFICATE_PASSPHARSE"
      prompt: "Enter the Certificate/Key Passphrase"
      private: yes
      

  tasks:

      - name: Assign Variables from YAML App File
        include_vars: "/mnt/d/OneDrive - Scalar Decisions/Documents/GWL/Automation/Ansible/playbooks/app-info/{{ APP_FILE }}.yml" 
          

      - name: Get Authentication Token
        uri:
          url: "https://{{ HOSTNAME }}/mgmt/shared/authn/login"
          body: '{"username": {{ USER }},"password": {{ PASSWORD }}, "loginProvidername":"tmos"}'
          method: POST
          return_content: yes
          headers:
                 Content-Type: "APPlication/json"
          validate_certs: no
        register: respData
        delegate_to: localhost

      - name: Assign Authentication Token to Variable 
        set_fact:
          F5_TOKEN: "{{respData.json.token.token}}"


      - name: Create ASM Policy from Template - {{ APP }}-ASM
        bigip_asm_policy:
            name: "{{ APP }}-ASM"
            user: "{{ USER }}"
            password: "{{ PASSWORD }}"
            server: "{{ HOSTNAME }}"
            file: '/mnt/d/OneDrive - Scalar Decisions/Documents/GWL/Automation/Ansible/playbooks/asm-templates/{{ ASM_TEMPLATE }}.xml'
            active: yes
            state: present
            validate_certs: no
        delegate_to: localhost
        register: ASMData
     
      - name: Create Traffic Policy - {{ ENVIRONMENT }}-{{ APP}}-ASM-Traffic-Policy
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/policy/"
          body: '{"name": "/Common/Drafts/{{ ENVIRONMENT }}-{{ APP }}-ASM-Traffic-Policy","controls":["asm"],"requires":["http"],"strategy": "/Common/first-match","rules":[{"ordinal": 1,"conditions": [],"name":"{{ APP }}-rule","actions":[{"status": 0,"name": "0","request": true,"vlanId": 0,"code": 0,"policy": "{{ APP }}-ASM","port": 0,"asm": true}]}]}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost
        ignore_errors: yes
          
      - name: Publish Traffic Policy
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/policy/"
          body: '{"command": "publish","name": "Drafts/{{ ENVIRONMENT }}-{{ APP }}-ASM-Traffic-Policy"}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost
        ignore_errors: yes
  
                  
      - name: Create '/root/certificates' Folder, if necessary
        file:
          path: /root/certificates
          state: directory
        remote_user: root
      
      - name: Send SSL Certificate/Key to F5
        copy:
          src: '/mnt/d/OneDrive - Scalar Decisions/Documents/GWL/Automation/Ansible/playbooks/certificates/{{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}.pfx'
          dest: '/root/certificates/{{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}.pfx'
        remote_user: root
          
      - name: Install SSL Certificate/Key - {{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}
        icontrol_install_config:
          uri: "/mgmt/tm/sys/crypto/pkcs12"
          body: '{"name":"{{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}","command":"install","from-local-file":"/root//certificates/{{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}.pfx","passphrase":"{{ CERTIFICATE_PASSPHARSE}}"}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost  
        
      
      - name: Create Client SSL Profile - {{ ENVIRONMENT }}-{{ APP }}-SSL
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/profile/clientSsl"
          body: '{"name":"{{ ENVIRONMENT }}-{{ APP }}-SSL", "defaultsFrom": "/Common/client_ssl_custom-gwl-ciphers", "certKeyChain": [{"name": "{{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}", "cert": "/Common/{{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}.crt", "key": "/Common/{{ ENVIRONMENT }}-{{ APP }}-{{ YEAR }}.key"}]}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost
      
      - name: Create HTTP Profile - {{ ENVIRONMENT }}-{{ APP }}-HTTP-Profile
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/profile/http"
          body: '{ "name":"{{ ENVIRONMENT }}-{{ APP }}-HTTP-Profile", "insertXforwardedFor": "enabled", "defaultsFrom": "/Common/http"}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost

      - name: Create TCP WAN Profile - {{ ENVIRONMENT }}-{{ APP }}-TCP-WAN-Profile
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/profile/tcp"
          body: '{"name":"{{ ENVIRONMENT }}-{{ APP }}-TCP-WAN-Profile","defaultsFrom": "/Common/tcp-wan-optimized"}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost

      - name: Create TCP LAN Profile - {{ ENVIRONMENT }}-{{ APP }}-TCP-LAN-Profile
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/profile/tcp"
          body: '{"name":"{{ ENVIRONMENT }}-{{ APP }}-TCP-LAN-Profile","defaultsFrom": "/Common/tcp-lan-optimized"}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost

      - name: Create Pool - {{ ENVIRONMENT }}-{{ APP}}-Pool
        bigip_pool:
          server: "{{ HOSTNAME }}"
          user: "{{ USER }}"
          password: "{{ PASSWORD }}"
          state: present
          description: "{{ DESCRIPTION }}"
          name: "{{ ENVIRONMENT }}-{{ APP }}-Pool"
          monitors:
            - tcp
        delegate_to: localhost
        
      - name: Add Node - {{ NODE }}
        bigip_node:
          server: "{{ HOSTNAME }}"
          user: "{{ USER }}"
          password: "{{ PASSWORD }}"
          state: present
          host: "{{ NODE }}"
          name: "{{ NODE }}"
          validate_certs: no
        delegate_to: localhost
        
      - name: Add Pool Member to {{ ENVIRONMENT }}-{{ APP}}-Pool
        bigip_pool_member:
          server: "{{ HOSTNAME }}"
          user: "{{ USER }}"
          password: "{{ PASSWORD }}"
          state: present
          pool: "{{ ENVIRONMENT }}-{{ APP }}-Pool"
          name: "{{ NODE }}"
          host: "{{ NODE }}"
          port: 443
          description: "{{ APP }} - {{ DESCRIPTION }}"
          validate_certs: no
        delegate_to: localhost

      - name: Create Redirect Virtual Server - {{ ENVIRONMENT }}-{{ APP }}-VS-80-redirect
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/virtual"
          body: '{"name":"{{ ENVIRONMENT }}-{{ APP }}-VS-80-redirect","destination":"{{ VS }}:80","description": "{{ DESCRIPTION }}","ipProtocol":"tcp","profiles": ["{{ ENVIRONMENT }}-{{ APP }}-HTTP-Profile",{"name":"{{ ENVIRONMENT }}-{{ APP }}-TCP-WAN-Profile", "context": "clientside"},{"name":"{{ ENVIRONMENT }}-{{ APP }}-TCP-LAN-Profile", "context": "serverside"}],"vlansEnabled": true,"vlans" : ["{{ VLAN }}"],"sourceAddressTranslation": { "type":"automap" },"rules": ["/Common/_sys_https_redirect"]}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost
          
          
      - name: Create HTTPS Virtual Server - {{ ENVIRONMENT }}-{{ APP }}-VS
        icontrol_install_config:
          uri: "/mgmt/tm/ltm/virtual"
          body: '{"name":"{{ ENVIRONMENT }}-{{ APP }}-VS","destination":"{{ VS }}:443","description": "{{ DESCRIPTION }}","ipProtocol":"tcp","pool":"{{ ENVIRONMENT }}-{{ APP }}-Pool","policies" : [{"name": "{{ ENVIRONMENT }}-{{ APP }}-ASM-Traffic-Policy"}],"profiles":["{{ ENVIRONMENT }}-{{ APP }}-HTTP-Profile",{"name":"{{ ENVIRONMENT }}-{{ APP }}-TCP-WAN-Profile", "context": "clientside"},{"name":"{{ ENVIRONMENT }}-{{ APP }}-TCP-LAN-Profile", "context": "serverside"},{"name":"{{ ENVIRONMENT }}-{{ APP }}-SSL", "context": "clientside"},{"name":"serverssl-insecure-compatible", "context": "serverside"},"DoS_Profile","websecurity"],"sourceAddressTranslation": { "type":"automap" },"rules":["/Common/XFF-Spoof-Prevention"],"securityLogProfiles":["{{ LOCAL_LOG }}","{{ REMOTE_LOG }}"]}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost
        
      - name: Sync configuration from device to group
        icontrol_install_config:
          uri: "/mgmt/tm/cm"
          body: '{"command":"run","utilCmdArgs":"config-sync to-group DevGroup2"}'
          host: "{{ HOSTNAME }}"
          token: "{{ F5_TOKEN }}"
        delegate_to: localhost
